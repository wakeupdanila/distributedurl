services:
  cass1:
    image: cassandra:5   # better to use a specific version, if you want to control upgrades
    container_name: cass1
    hostname: cass1
    mem_limit: 2g  # It's not strictly required, but it's better to have some memory limit
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - app-network
    volumes:
      - cassandra-data:/var/lib/cassandra    # This is the volume that will persist data for cass1 node
      - ./etc/cass1:/etc/cassandra   # Use your own config files for full control
    environment: &environment    # Declare and save environments variables into "environment"
      CASSANDRA_SEEDS: "cass1"    # The first two nodes will be seeds
      CASSANDRA_CLUSTER_NAME: SolarSystem
      CASSANDRA_DC: Mars
      CASSANDRA_RACK: West
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 128
  shortener_service:
    build: distributedurl_shortener
    container_name: distributedurl_shortener
    hostname: distributedurl_shortener
    networks:
      - app-network
    depends_on:
      cass1:
        condition: service_healthy
      broker:
        condition: service_healthy
    ports:
      - 8080:8080
  redirection_service:
    build: distributedurl_redirection
    container_name: distributedurl_redirection
    hostname: distributedurl_redirection
    networks:
      - app-network
    depends_on:
      cass1:
        condition: service_healthy
    ports:
      - 8081:8081
  broker:
    image: apache/kafka:3.7.1
    hostname: broker
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:9092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT://:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    networks:
      - app-network
    volumes:
      - broker-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1"]
      start_period: 10s
      interval: 5s
      timeout: 10s
volumes:
  broker-data:
  cassandra-data:
networks:
  app-network:

